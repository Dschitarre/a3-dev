hostname = "Sector Control | Altis | PvPvE";
password = "";
passwordAdmin = "";
admins[] = {"76561198069577451"};
serverCommandPassword = "";

motd[] = {};
motdInterval = 5;

maxPlayers = 150;
kickDuplicate = 0;
verifySignatures = 2;
equalModRequired = 0;
allowedFilePatching = 0;
filePatchingExceptions[] = {};

voteMissionPlayers = 0;
voteThreshold = 0;

disableVoN = 0;
vonCodec = 1;
vonCodecQuality = 30;
persistent = 1;
timeStampFormat = "short";
BattlEye = 1;
allowedpreprocessFileLineNumbersExtensions[] = {"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi"}; //only allow files with those extensions to be loaded via preprocessFileLineNumbers command (since Arma 3 build 1.19.124216)
allowedPreprocessFileExtensions[] = {"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi"}; //only allow files with those extensions to be loaded via preprocessFile/preprocessFileLineNumber commands (since Arma 3 build 1.19.124323)
allowedHTMLLoadExtensions[] = {"htm","html","xml","txt"};

upnp = false;
disconnectTimeout = 5; // Time to wait before disconnecting a user which temporarly lost connection. Range is 5 to 90 seconds.
maxDesync = 150; // Max desync value until server kick the user
maxPing= 200; // Max ping value until server kick the user
maxPacketLoss= 50; // Max packetloss value until server kick the user
kickClientsOnSlowNetwork[] = {0, 0, 0, 0}; //Defines if {<MaxPing>, <MaxPacketLoss>, <MaxDesync>, <DisconnectTimeout>} will be logged (0) or kicked (1)
kickTimeout[] = {{0, -1}, {1, 180}, {2, 180}, {3, 180} };
votingTimeOut[] = {60, 90}; // Kicks users from server if they spend too much time in mission voting
roleTimeOut[] = {90, 120}; // Kicks users from server if they spend too much time in role selection 
briefingTimeOut[] = {60, 90}; // Kicks users from server if they spend too much time in briefing (map) screen
debriefingTimeOut[] = {45, 60}; // Kicks users from server if they spend too much time in debriefing screen
lobbyIdleTimeout = 300; // The amount of time the server will wait before force-starting a mission without a logged-in Admin.
missionsToServerRestart = 6; // Number of times missionEnd happens before server initiate process restart (uses actual session startup command-line parameters)

onUserConnected = "";
onUserDisconnected = "";
doubleIdDetected = "";

onUnsignedData = "kick (_this select 0)";
onHackedData = "kick (_this select 0)";
onDifferentData = "";

randomMissionOrder = true;
autoSelectMission = true;

forcedDifficulty = "Custom";

class Missions
{
    class pyrgos
    {
        template = sectorControl.Altis;
        difficulty = "Custom";

        class Params {
            thirdPerson = 1;
            MapName = 24;
            timeMultiplierDay = 3;
            timeMultiplierNight = 5;
            autoHeal = 0;
        };
    };

    class agios_dionysios
    {
        template = sectorControl.Altis;
        difficulty = "Custom";

        class Params {
            thirdPerson = 1;
            MapName = 26;
            timeMultiplierDay = 3;
            timeMultiplierNight = 5;
            autoHeal = 0;
        };
    };

    class telos
    {
        template = sectorControl.Altis;
        difficulty = "Custom";

        class Params {
            thirdPerson = 1;
            MapName = 29;
            timeMultiplierDay = 3;
            timeMultiplierNight = 5;
            autoHeal = 0;
        };
    };

    class zaros
    {
        template = sectorControl.Altis;
        difficulty = "Custom";

        class Params {
            thirdPerson = 1;
            MapName = 22;
            timeMultiplierDay = 3;
            timeMultiplierNight = 5;
            autoHeal = 0;
        };
    };

    class athira
    {
        template = sectorControl.Altis;
        difficulty = "Custom";

        class Params {
            thirdPerson = 1;
            MapName = 23;
            timeMultiplierDay = 3;
            timeMultiplierNight = 5;
            autoHeal = 0;
        };
    };
};

missionWhitelist[] =
{
    "sectorControl.Altis"
};